/*
 * Telstra Programmable Network API
 * Telstra Programmable Network is a self-provisioning platform that allows its users to create on-demand connectivity services between multiple end-points and add various network functions to those services. Programmable Network enables to connectivity to a global ecosystem of networking services as well as public and private cloud services. Once you are connected to the platform on one or more POPs (points of presence), you can start creating those services based on the use case that you want to accomplish. The Programmable Network API is available to all customers who have registered to use the Programmable Network. To register, please contact your account representative.
 *
 * OpenAPI spec version: 2.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package TelstraTPN;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Model100InventoryRegularendpointRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-30T09:45:30.716+11:00")
public class Model100InventoryRegularendpointRequest {
  @SerializedName("customeruuid")
  private String customeruuid = null;

  @SerializedName("datacenteruuid")
  private String datacenteruuid = null;

  @SerializedName("interfacetype")
  private String interfacetype = null;

  public Model100InventoryRegularendpointRequest customeruuid(String customeruuid) {
    this.customeruuid = customeruuid;
    return this;
  }

   /**
   * 
   * @return customeruuid
  **/
  @ApiModelProperty(value = "")
  public String getCustomeruuid() {
    return customeruuid;
  }

  public void setCustomeruuid(String customeruuid) {
    this.customeruuid = customeruuid;
  }

  public Model100InventoryRegularendpointRequest datacenteruuid(String datacenteruuid) {
    this.datacenteruuid = datacenteruuid;
    return this;
  }

   /**
   * 
   * @return datacenteruuid
  **/
  @ApiModelProperty(value = "")
  public String getDatacenteruuid() {
    return datacenteruuid;
  }

  public void setDatacenteruuid(String datacenteruuid) {
    this.datacenteruuid = datacenteruuid;
  }

  public Model100InventoryRegularendpointRequest interfacetype(String interfacetype) {
    this.interfacetype = interfacetype;
    return this;
  }

   /**
   * 
   * @return interfacetype
  **/
  @ApiModelProperty(value = "")
  public String getInterfacetype() {
    return interfacetype;
  }

  public void setInterfacetype(String interfacetype) {
    this.interfacetype = interfacetype;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Model100InventoryRegularendpointRequest _100InventoryRegularendpointRequest = (Model100InventoryRegularendpointRequest) o;
    return Objects.equals(this.customeruuid, _100InventoryRegularendpointRequest.customeruuid) &&
        Objects.equals(this.datacenteruuid, _100InventoryRegularendpointRequest.datacenteruuid) &&
        Objects.equals(this.interfacetype, _100InventoryRegularendpointRequest.interfacetype);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customeruuid, datacenteruuid, interfacetype);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Model100InventoryRegularendpointRequest {\n");
    
    sb.append("    customeruuid: ").append(toIndentedString(customeruuid)).append("\n");
    sb.append("    datacenteruuid: ").append(toIndentedString(datacenteruuid)).append("\n");
    sb.append("    interfacetype: ").append(toIndentedString(interfacetype)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

