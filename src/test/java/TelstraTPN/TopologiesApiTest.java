/*
 * Telstra Programmable Network API
 * Telstra Programmable Network is a self-provisioning platform that allows its users to create on-demand connectivity services between multiple end-points and add various network functions to those services. Programmable Network enables to connectivity to a global ecosystem of networking services as well as public and private cloud services. Once you are connected to the platform on one or more POPs (points of presence), you can start creating those services based on the use case that you want to accomplish. The Programmable Network API is available to all customers who have registered to use the Programmable Network. To register, please contact your account representative.
 *
 * OpenAPI spec version: 2.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package TelstraTPN;

import invalidPackageName.ApiException;
import TelstraTPN.Topology;
import TelstraTPN.Ttms100TopologyTagObjectsResponse;
import TelstraTPN.Ttms100TopologyTagRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TopologiesApi
 */
@Ignore
public class TopologiesApiTest {

    private final TopologiesApi api = new TopologiesApi();

    
    /**
     * Create a named topology tag
     *
     * Create a named topology tag
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createANamedTopologyTagTest() throws ApiException {
        Ttms100TopologyTagRequest body = null;
        Topology response = api.createANamedTopologyTag(body);

        // TODO: test validations
    }
    
    /**
     * Get information about the specified topology tag
     *
     * Get information about the specified topology tag
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInformationAboutTheSpecifiedTopologyTagTest() throws ApiException {
        String topotaguuid = null;
        Topology response = api.getInformationAboutTheSpecifiedTopologyTag(topotaguuid);

        // TODO: test validations
    }
    
    /**
     * List all topology tags
     *
     * List all topology tags
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAllTopologyTagsTest() throws ApiException {
        List<Topology> response = api.listAllTopologyTags();

        // TODO: test validations
    }
    
    /**
     * List objects for Topology
     *
     * List all objects (Endpoints, Links, VPorts, etc.) associated with the topology tag.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listObjectsForTopologyTest() throws ApiException {
        String topotaguuid = null;
        Ttms100TopologyTagObjectsResponse response = api.listObjectsForTopology(topotaguuid);

        // TODO: test validations
    }
    
}
